relational databases -> scaled vertically ie you increase cpu, memory, storage for a ec2 instance
non relational dataabases -> scales horizontally, you add more ec2 instances and load is distributed

Operational
online transaction processing (OLTP) for websites
process transactions adding , update,delete
short transactions simple queries
amazon rds, oracle, postgres
mongo db, cassandra, dynamoDB

Analytical
Online anayltics processing(OLAP) source dsta comes from OLTP's
Data warehouse. spearated from customer facing DB's. Data s extracted for decision making
long transactios & complex queries
Amazon Redshift
Amazon EMR

Database on EC2 -> Need full control over instance and database. 3rd party not available in RDS

Amazon RDS -> oracle, postgressql, microsoft sql,mariadb
uses EC2 instances, you must choose an instance/family type
easy to setup, scalable, fault tolerant, highly available
fault tolerance/ disaster recovery -> master fails in one az for any reason, replica in other AZ can take over
automatic failover for multi AZ
you can have master DB taking reads and writes read replicas only for reads

DynamoDB-> in memory performamnce, high I/O needs, dynamic scaling
serverless -> fully managed by AWS, fault tolerant, predictable performsance and seamless scalability
push button scaling means that you scale db at any time or use autoscaling
data replicated synchronously across all AZ's in a region
global tables provides a fully managed solution for deploying multi region , multi master DB
DynamoDB acclerator(DAX) is fully amnaged, HA, in memory cache for dynamo db that delivers up to 10x performance improvement

Redshift
taking data from operational Db's and do analytics
can analyse data using SQL and Business Inteligence(BI) tools
relational database
process large amounts of data
keeps three copies of your data

ElastiCache 
fast temprary storage for small amounts of data. You can put an elasticache infront of a relational DB for faster 
performance (Database Caching)
easy to deploy and run types: memcached or redis server nodes in cloud
inmemory caching can be used to significantly imporve latency & throughput for heavy app workloads or compute intensive
elasticache nodes run on EC2 instances so must choose instance type

Amazon Aurora -> aws database
supports mysql and postgres
much faster than regular RDS

LABS
create rds instance -> allow inbound traffic to security group

**** you dont need to manage operating system for DB's


